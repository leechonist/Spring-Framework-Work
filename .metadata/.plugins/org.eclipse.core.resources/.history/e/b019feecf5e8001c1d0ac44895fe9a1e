package POS.Control;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import POS.Model.AccountInfoClass;
import POS.Model.AccountUnitClass;
import POS.Model.*;

public class AccountControlClass {

	public String login(Model model)
	{
		String str = "";
		model.addAttribute("Text",str);
		return "login";
	}
	@PostMapping(value="logincheck.do")
	public String loginCheck(String aID,String aPW,	String aValue,AccountUnitClass aAccount, Model model,HttpSession session)
	{
		String str="";
		if(aValue.equals("취소")) return "index";
		mAccount = accountInfo.getAccount(aID);
		if (mAccount==null)str = "아이디를 다시 확인해주세요.";
		
		else if(aID.equals(mAccount.getId()))
		{
			if(aPW.equals(mAccount.getPassword()))
			{
				
				session.setAttribute("name", mAccount.getName());
				session.setAttribute("id", mAccount.getId());
				session.setAttribute("pw", mAccount.getPassword());
				session.setAttribute("position", mAccount.getPosition()==1?"직원":"매니저");
				return "index";
			}
			str="비밀번호를 다시 확인해주세요.";
		}
		model.addAttribute("Text",str);
		return "login";
	}
	@GetMapping(value="/signin")
	public String signin(Model model)
	{
		String str = "";
		model.addAttribute("Text",str);
		return "signin";		
	}
	@PostMapping(value="signincheck.do")
	public String signinCheck(
			@RequestParam(value="strName",defaultValue="")String aName,
			@RequestParam(value="strID",defaultValue="")String aID,
			@RequestParam(value="strPW",defaultValue="")String aPW,
			@RequestParam(value="strCheck",defaultValue="")String aCheck,
			@RequestParam(value="value",defaultValue="")String aValue
			,Model model,HttpSession session)
	{
		String str="";
		if(aValue.equals("취소")) return "index";
		mAccount = accountInfo.getAccount(aID);
		if(mAccount!=null)
		{
			str="아이디가 중복되었습니다.";
		}
		else if(!aPW.equals(aCheck))
		{
			str="비밀번호를 다시 확인해주세요.";
		}
		else
		{
			accountInfo.addAccount(new AccountUnitClass(aName,aID,aPW,1));
			return "index";
		}
		model.addAttribute("Text",str);
		
		return "signin";
	}
}
